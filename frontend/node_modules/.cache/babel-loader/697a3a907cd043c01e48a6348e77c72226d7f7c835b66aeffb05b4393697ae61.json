{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giada\\\\OneDrive\\\\Desktop\\\\progetto finale\\\\frontend\\\\src\\\\components\\\\messageList\\\\MessagesList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Message from \"../message/Message\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./messageList.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MessagesList({\n  messageList,\n  ContactName,\n  ContactId,\n  socket,\n  username,\n  handleChat,\n  setReload\n}) {\n  _s();\n  const [body, setBody] = useState(\"\");\n  function checkBody() {\n    return body.length > 0;\n  }\n  useEffect(() => {\n    document.getElementById(\"messagesContainer\").scrollTop = 99999999;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatName\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" \", ContactName, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"deleteChatButton\",\n        onClick: e => {\n          const token = document.cookie.split(\";\").find(row => row.startsWith(\"token\")).split(\"=\")[1];\n          console.log(\"Inizio prevent default\");\n          e.preventDefault();\n          fetch(\"http://localhost:8080/api/chats/deleteChat\", {\n            method: \"post\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              'Authorization': token\n            },\n            body: JSON.stringify({\n              username: ContactName\n            })\n          }).then(res => {\n            if (res.ok) return res.json();else throw new Error(\"Errore di comunicazione\");\n          }).then(res => {\n            window.alert(res);\n            handleChat();\n            setReload(true);\n          }).catch(e => console.log(e));\n        },\n        children: \"Elimina chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"messagesContainer\",\n        children: messageList.messages && messageList.messages.map(e => /*#__PURE__*/_jsxDEV(Message, {\n          idMessage: e,\n          Contact: ContactId,\n          ContactName: ContactName\n        }, e, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 70\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBar\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"chatForm\",\n          onSubmit: e => {\n            e.preventDefault();\n            setBody(\"\"); //i valori del emit sarebbero il data\n            socket.emit(\"SendMessage\", {\n              name: username,\n              receiver: ContactId,\n              receiverName: ContactName,\n              body: body,\n              id: messageList._id\n            });\n            e.target.insertMessage.value = \"\";\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            name: \"insertMessage\",\n            classname: \"bar\",\n            onChange: e => setBody(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: !checkBody(),\n            className: \"button\",\n            children: \"Invia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n}\n_s(MessagesList, \"2jdxzCPcyag7sjrTKSZ2DPusXKY=\");\n_c = MessagesList;\nvar _c;\n$RefreshReg$(_c, \"MessagesList\");","map":{"version":3,"names":["React","useEffect","useState","Message","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","MessagesList","messageList","ContactName","ContactId","socket","username","handleChat","setReload","_s","body","setBody","checkBody","length","document","getElementById","scrollTop","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","e","token","cookie","split","find","row","startsWith","console","log","preventDefault","fetch","method","headers","JSON","stringify","then","res","ok","json","Error","window","alert","catch","id","messages","map","idMessage","Contact","onSubmit","emit","name","receiver","receiverName","_id","target","insertMessage","value","type","classname","onChange","disabled","_c","$RefreshReg$"],"sources":["C:/Users/giada/OneDrive/Desktop/progetto finale/frontend/src/components/messageList/MessagesList.jsx"],"sourcesContent":["import React, {useEffect,useState} from \"react\"; \r\nimport Message from \"../message/Message\" \r\nimport Button from \"react-bootstrap/Button\" \r\nimport \"./messageList.css\"\r\n \r\nexport default function MessagesList ({messageList, ContactName, ContactId, socket, username, handleChat, setReload}){ \r\n \r\n   const [body,setBody]=useState(\"\"); \r\n    \r\n   function checkBody(){ \r\n      return body.length>0; \r\n   } \r\n\r\n   \r\n   \r\n \r\n   useEffect(()=>{ \r\n      document.getElementById(\"messagesContainer\").scrollTop=99999999; \r\n   })\r\n \r\n    return( \r\n\r\n      \r\n\r\n      <> \r\n         <div className=\"chatName\"> \r\n                  <h3> {ContactName} </h3> \r\n                  <Button className=\"deleteChatButton\" onClick={e =>{\r\n                     const token=document.cookie.split(\";\") \r\n                     .find((row) => row.startsWith(\"token\")) \r\n                     .split(\"=\")[1]; \r\n                     console.log(\"Inizio prevent default\")\r\n                     e.preventDefault()\r\n                     fetch(\"http://localhost:8080/api/chats/deleteChat\", {\r\n                        method: \"post\",\r\n                        headers: {\r\n                           \"Content-Type\": \"application/json\",\r\n                           'Authorization': token\r\n                     },\r\n                     body: JSON.stringify({\r\n                           username: ContactName\r\n                     })\r\n                     })\r\n                     .then(res=> {\r\n                        if (res.ok) return res.json(); \r\n                        else throw new Error(\"Errore di comunicazione\")})\r\n                     .then(res=>{\r\n                        window.alert(res); \r\n                        handleChat()\r\n                        setReload(true)\r\n                        \r\n                                                      \r\n                     })\r\n                     .catch(e=>console.log(e)); \r\n                  }}>Elimina chat</Button>\r\n         </div> \r\n\r\n         <div className=\"chatContainer\">\r\n            <div id=\"messagesContainer\"> \r\n               {/* Per la visualizzazione dei messaggi devo passare l'id di tutti gli elementi della lista e l'id del contatto per capire il mittente o il destinatario*/} \r\n               {messageList.messages && messageList.messages.map(e=> <Message idMessage= {e} Contact={ContactId} ContactName={ContactName} key={e}/>)} \r\n            </div> \r\n            \r\n            \r\n            <div className=\"chatBar\"> \r\n               {/*Form per l'invio del messaggio */} \r\n               <form className=\"chatForm\" onSubmit={e=> { \r\n                  e.preventDefault(); \r\n                  setBody(\"\");                //i valori del emit sarebbero il data\r\n                  socket.emit(\"SendMessage\", {name: username, receiver: ContactId, receiverName: ContactName, body: body, id: messageList._id}); \r\n                  e.target.insertMessage.value=\"\"; \r\n               }}> \r\n                  <textarea type=\"text\" name=\"insertMessage\" classname=\"bar\" onChange={e=> \r\n                     setBody(e.target.value) \r\n                  }></textarea> \r\n                  <Button type=\"submit\" disabled={!checkBody()} className=\"button\">Invia</Button> \r\n               </form> \r\n            </div> \r\n         </div>\r\n         \r\n\r\n      </> \r\n   )       \r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}